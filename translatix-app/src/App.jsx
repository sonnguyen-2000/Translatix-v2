import React, { useState, useEffect } from "react";
import ThemeToggle from "./components/ui/ThemeToggle";
import Card from "./components/ui/Card";
import useStarfield from "./hooks/useStarfield";
import Modal from "./components/ui/Modal";
import ComicStudio from "./components/comic-studio/ComicStudio";
import "./styles/theme.css";

const App = () => {
  const canvasRef = useStarfield();
  const [isModalOpen, setIsModalOpen] = useState(false);
  const [selectedPlatform, setSelectedPlatform] = useState(null);
  const [activeProject, setActiveProject] = useState(null);

  // S·ª¨A L·ªñI: H√†m n√†y gi·ªù s·∫Ω m·ªü modal cho B·∫§T K·ª≤ n·ªÅn t·∫£ng n√†o.
  // Logic "if (platform === 'comic')" ƒë√£ ƒë∆∞·ª£c lo·∫°i b·ªè.
  const openModal = (platform) => {
    setSelectedPlatform(platform);
    setIsModalOpen(true);
  };

  const closeModal = () => {
    setIsModalOpen(false);
  };

  // H√†m x·ª≠ l√Ω khi m·ªôt file ƒë∆∞·ª£c ch·ªçn t·ª´ modal
  const handleFileSelect = (file) => {
    console.log(`File selected for platform ${selectedPlatform}:`, file);
    // ƒê√≥ng modal
    closeModal();

    // N·∫øu n·ªÅn t·∫£ng l√† 'comic', hi·ªÉn th·ªã ComicStudio
    if (selectedPlatform === "comic") {
      // D√πng timeout nh·ªè ƒë·ªÉ animation ƒë√≥ng modal m∆∞·ª£t h∆°n
      setTimeout(() => {
        setActiveProject("comic");
      }, 300);
    }
    // B·∫°n c√≥ th·ªÉ th√™m logic cho c√°c n·ªÅn t·∫£ng kh√°c ·ªü ƒë√¢y, v√≠ d·ª•:
    // else {
    //   alert(`ƒê√£ ch·ªçn file ${file.name} cho n·ªÅn t·∫£ng ${selectedPlatform}`);
    // }
  };

  const exitStudio = () => {
    setActiveProject(null);
  };

  // Logic render: N·∫øu c√≥ d·ª± √°n ƒëang ho·∫°t ƒë·ªông, hi·ªÉn th·ªã studio
  if (activeProject === "comic") {
    return <ComicStudio onExit={exitStudio} />;
  }

  // N·∫øu kh√¥ng, hi·ªÉn th·ªã giao di·ªán ch·ªçn n·ªÅn t·∫£ng
  return (
    <>
      <canvas
        ref={canvasRef}
        id="starfield-canvas"
        style={{
          position: "fixed",
          top: 0,
          left: 0,
          width: "100%",
          height: "100%",
          zIndex: -3,
        }}
      />
      <ThemeToggle />
      <div className="min-h-screen w-full flex flex-col items-center justify-center p-4">
        <main className="w-full max-w-7xl mx-auto">
          <div className="text-center">
            <h1
              className="text-4xl md:text-6xl font-black mb-4 fadeInUpScale"
              style={{ animationDelay: "0.1s", textWrap: "balance" }}>
              Ch·ªçn N·ªÅn T·∫£ng D·ªãch Thu·∫≠t
            </h1>
            <p
              className="text-lg max-w-3xl mx-auto mb-16 fadeInUpScale text-secondary"
              style={{ animationDelay: "0.2s", textWrap: "balance" }}>
              Gi·∫£i ph√°p b·∫£n ƒë·ªãa h√≥a chuy√™n nghi·ªáp, tr·ª±c quan v√† m·∫°nh m·∫Ω cho c√°c
              d·ª± √°n c·ªßa b·∫°n.
            </p>
          </div>
          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-8">
            <Card
              icon="üéÆ"
              title="D·ªãch Game RPG"
              description="C·ªët truy·ªán, nhi·ªám v·ª•, v·∫≠t ph·∫©m, l·ªùi tho·∫°i phong ph√∫."
              animationDelay={0.3}
              onClick={() => openModal("rpg")}
            />
            <Card
              icon="üß©"
              title="D·ªãch Game Unity"
              description="Ng√¥n ng·ªØ, UI/UX v√† n·ªôi dung ph·ª©c t·∫°p t·ª´ engine."
              animationDelay={0.4}
              onClick={() => openModal("unity")}
            />
            <Card
              icon="üéØ"
              title="D·ªãch Game Unreal"
              description="D·ª± √°n Unreal Engine chuy√™n s√¢u, hi·ªáu ·ª©ng ƒë·ªânh cao."
              animationDelay={0.5}
              onClick={() => openModal("unreal")}
            />
            <Card
              icon="üìö"
              title="D·ªãch Truy·ªán Tranh"
              description="L·ªùi tho·∫°i, hi·ªáu ·ª©ng √¢m thanh, gi·ªØ tr·ªçn v·∫πn phong c√°ch."
              animationDelay={0.6}
              onClick={() => openModal("comic")}
            />
          </div>
        </main>
      </div>
      <Modal
        isOpen={isModalOpen}
        onClose={closeModal}
        platform={selectedPlatform}
        onFileSelect={handleFileSelect}
      />
    </>
  );
};

export default App;
